class BankChatbot:
    def _init_(self):
        # Initialize banking data with enhanced information
        self.banking_data = {
            "accounts": {
                "1.1": {
                    "name": "Savings Account",
                    "definition": "A basic bank account for individuals to save money and earn interest",
                    "eligibility": "Individuals above 18 years, valid KYC documents",
                    "documents": [
                        "Identity Proof (Aadhaar Card, PAN Card, Passport)",
                        "Address Proof (Utility Bills, Bank Statement)",
                        "Passport Size Photos (2)",
                        "KYC Form"
                    ],
                    "benefits": [
                        "Interest Rate: 4% per annum",
                        "Minimum Balance: Rs. 1000",
                        "Zero Balance Option Available",
                        "Online Banking Access",
                        "Mobile Banking App",
                        "ATM Card with Contactless Payment",
                        "Cheque Book Facility",
                        "Fund Transfer (NEFT/RTGS/IMPS)",
                        "Bill Payments",
                        "Standing Instructions"
                    ],
                    "rules": [
                        "Minimum balance maintenance required",
                        "Limited free ATM transactions",
                        "Interest calculated on daily balance"
                    ],
                    "best_banks": [
                        {
                            "name": "HDFC Bank",
                            "interest_rate": "4.0%",
                            "min_balance": "Rs. 10,000",
                            "application_link": "https://www.hdfcbank.com/personal/save/accounts/savings-accounts"
                        },
                        {
                            "name": "ICICI Bank",
                            "interest_rate": "3.5%",
                            "min_balance": "Rs. 10,000",
                            "application_link": "https://www.icicibank.com/Personal-Banking/account-deposit/savings-account/index.page"
                        },
                        {
                            "name": "State Bank of India",
                            "interest_rate": "3.0%",
                            "min_balance": "Rs. 3,000",
                            "application_link": "https://retailbanking.sbi.co.in/retail/savings-account.htm"
                        }
                    ]
                },
                "1.2": {
                    "name": "Current Account",
                    "definition": "A bank account for businesses and professionals with high transaction volume",
                    "eligibility": "Businesses, professionals, companies, partnerships",
                    "documents": [
                        "Business Proof (Registration Certificate, GST Certificate)",
                        "Identity Proof (Aadhaar Card, PAN Card, Passport)",
                        "Address Proof (Business Premises Proof)",
                        "Board Resolution (for companies)",
                        "Authorized Signatory List",
                        "Business PAN Card",
                        "Photographs of Signatories"
                    ],
                    "benefits": [
                        "Unlimited Transactions",
                        "Overdraft Facility",
                        "Business Banking Services",
                        "Multi-location Access",
                        "Bulk Payment Facility",
                        "Payroll Management",
                        "Tax Payment Services",
                        "Customized Cheque Books"
                    ],
                    "rules": [
                        "Minimum Balance: Rs. 10,000",
                        "No interest on balance",
                        "Transaction charges apply"
                    ],
                    "best_banks": [
                        {
                            "name": "HDFC Bank",
                            "min_balance": "Rs. 25,000",
                            "transaction_limit": "Unlimited",
                            "application_link": "https://www.hdfcbank.com/personal/save/accounts/current-accounts"
                        },
                        {
                            "name": "ICICI Bank",
                            "min_balance": "Rs. 25,000",
                            "transaction_limit": "Unlimited",
                            "application_link": "https://www.icicibank.com/Personal-Banking/account-deposit/current-account/index.page"
                        },
                        {
                            "name": "Axis Bank",
                            "min_balance": "Rs. 25,000",
                            "transaction_limit": "Unlimited",
                            "application_link": "https://www.axisbank.com/retail/current-account"
                        }
                    ]
                },
                "1.3": {
                    "name": "Fixed Deposit",
                    "definition": "A term deposit with fixed interest rate and maturity period",
                    "eligibility": "Individuals, companies, trusts, societies",
                    "documents": [
                        "Identity Proof",
                        "Address Proof",
                        "PAN Card",
                        "Form 15G/15H (if applicable)"
                    ],
                    "benefits": [
                        "Higher Interest Rates (5-7% p.a.)",
                        "Flexible Tenure (7 days to 10 years)",
                        "Loan Against FD",
                        "Auto-renewal Option",
                        "Quarterly Interest Payout Option"
                    ],
                    "rules": [
                        "Minimum deposit: Rs. 1,000",
                        "Premature withdrawal charges apply",
                        "TDS applicable on interest"
                    ],
                    "best_banks": [
                        {
                            "name": "HDFC Bank",
                            "interest_rate": "7.0%",
                            "min_deposit": "Rs. 5,000",
                            "application_link": "https://www.hdfcbank.com/personal/save/deposits/fixed-deposits"
                        },
                        {
                            "name": "ICICI Bank",
                            "interest_rate": "6.9%",
                            "min_deposit": "Rs. 10,000",
                            "application_link": "https://www.icicibank.com/Personal-Banking/account-deposit/fixed-deposits/index.page"
                        }
                    ]
                }
            },
            "loans": {
                "2.1": {
                    "name": "Home Loan",
                    "definition": "Loan for purchasing or constructing a residential property",
                    "eligibility": "Age: 21-65 years, Stable income, Good credit score",
                    "documents": [
                        "Property Documents (Sale Agreement, Title Deed)",
                        "Identity Proof (Aadhaar Card, PAN Card, Passport)",
                        "Income Proof (Salary Slips, Bank Statements)",
                        "Property Valuation Report",
                        "Cost Estimate",
                        "Builder Profile"
                    ],
                    "benefits": [
                        "Amount: Up to Rs. 5 crores",
                        "Interest Rate: From 8.4%",
                        "Tenure: Up to 30 years",
                        "Pre-approval Available",
                        "Balance Transfer",
                        "Top-up Loan",
                        "Part Prepayment",
                        "Tax Benefits"
                    ],
                    "rules": [
                        "EMI based on income",
                        "Property insurance required",
                        "Pre-closure charges apply"
                    ],
                    "best_banks": [
                        {
                            "name": "HDFC Bank",
                            "interest_rate": "8.40%",
                            "processing_fee": "0.50%",
                            "application_link": "https://www.hdfc.com/home-loan"
                        },
                        {
                            "name": "SBI",
                            "interest_rate": "8.55%",
                            "processing_fee": "0.35%",
                            "application_link": "https://homeloans.sbi/"
                        },
                        {
                            "name": "ICICI Bank",
                            "interest_rate": "8.60%",
                            "processing_fee": "0.50%",
                            "application_link": "https://www.icicibank.com/home-loan/interest-rates.page"
                        }
                    ]
                }
            },
            "cards": {
                "3.1": {
                    "name": "Debit Card",
                    "definition": "Card linked to bank account for cashless transactions",
                    "eligibility": "Account holder with valid KYC",
                    "documents": [
                        "Account Details",
                        "KYC Documents (Aadhaar Card, PAN Card)",
                        "Card Application Form",
                        "Passport Size Photo"
                    ],
                    "benefits": [
                        "Annual Fee: Zero",
                        "Daily ATM Limit: Rs. 50,000",
                        "Online Shopping Limit: Rs. 1 lakh",
                        "Contactless Payment",
                        "International Usage",
                        "Cashback Offers",
                        "Reward Points",
                        "Insurance Coverage",
                        "Lost Card Protection"
                    ],
                    "rules": [
                        "PIN required for transactions",
                        "Daily withdrawal limits apply",
                        "International usage charges"
                    ],
                    "best_banks": [
                        {
                            "name": "HDFC Bank",
                            "annual_fee": "Zero",
                            "cashback": "Up to 1%",
                            "application_link": "https://www.hdfcbank.com/personal/pay/cards/debit-cards"
                        },
                        {
                            "name": "ICICI Bank",
                            "annual_fee": "Zero",
                            "cashback": "Up to 1%",
                            "application_link": "https://www.icicibank.com/Personal-Banking/cards/debit-cards/index.page"
                        },
                        {
                            "name": "Axis Bank",
                            "annual_fee": "Zero",
                            "cashback": "Up to 1%",
                            "application_link": "https://www.axisbank.com/retail/cards/debit-card"
                        }
                    ]
                }
            }
        }

    def get_ai_response(self, query):
        """Get AI-powered response for banking queries"""
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "You are a helpful banking assistant. Provide accurate and concise information about banking services."},
                    {"role": "user", "content": query}
                ],
                max_tokens=150,
                temperature=0.7
            )
            return response.choices[0].message.content
        except Exception as e:
            return f"I apologize, but I couldn't process your query at the moment. Please try again later. Error: {str(e)}"

    def get_real_time_rates(self, service_type):
        """Get real-time rates for banking services (mock implementation)"""
        # In a real implementation, this would fetch data from banking APIs
        rates = {
            "home_loan": {
                "HDFC": "8.40%",
                "SBI": "8.55%",
                "ICICI": "8.60%"
            },
            "personal_loan": {
                "HDFC": "10.50%",
                "SBI": "10.75%",
                "ICICI": "10.90%"
            },
            "savings_account": {
                "HDFC": "4.00%",
                "SBI": "3.00%",
                "ICICI": "3.50%"
            }
        }
        return rates.get(service_type, {})

    def display_menu(self):
        """Display the main menu with all options"""
        menu = """
Please select a category by entering the corresponding number:

1. Bank Accounts
   1.1 Savings Account
   1.2 Current Account
   1.3 Fixed Deposit (FD)
   1.4 Recurring Deposit (RD)
   1.5 Salary Account

2. Loan Services
   2.1 Home Loan
   2.2 Personal Loan
   2.3 Car Loan
   2.4 Education Loan
   2.5 Business Loan
   2.6 Property Loan
   2.7 Agricultural Loan

3. Card Types
   3.1 Debit Card
   3.2 Credit Card
   3.3 Prepaid Card
   3.4 ATM Card
   3.5 Virtual Card
   3.6 International Card

4. AI Q&A Session
5. Real-Time Rates
6. Exit

Type 'exit' to quit.
"""
        return menu

    def get_response(self, user_input):
        """Get response based on user input"""
        user_input = user_input.lower().strip()
        
        if user_input == 'hi' or user_input == 'hello':
            return self.display_menu()
            
        if user_input == 'exit' or user_input == '6':
            return "Thank you for using our banking chatbot. Goodbye!"
            
        # Handle numbered menu options
        if user_input in ['1', '2', '3', '4', '5']:
            if user_input == '1':
                return """
Bank Accounts Information:
1.1 Savings Account
1.2 Current Account
1.3 Fixed Deposit (FD)
1.4 Recurring Deposit (RD)
1.5 Salary Account

Please select a specific account type (e.g., 1.1 for Savings Account) for detailed information."""
            elif user_input == '2':
                return """
Loan Services Information:
2.1 Home Loan
2.2 Personal Loan
2.3 Car Loan
2.4 Education Loan
2.5 Business Loan
2.6 Property Loan
2.7 Agricultural Loan

Please select a specific loan type (e.g., 2.1 for Home Loan) for detailed information."""
            elif user_input == '3':
                return """
Card Types Information:
3.1 Debit Card
3.2 Credit Card
3.3 Prepaid Card
3.4 ATM Card
3.5 Virtual Card
3.6 International Card

Please select a specific card type (e.g., 3.1 for Debit Card) for detailed information."""
            elif user_input == '4':
                return "You can now ask any banking-related question. Type your question below."
            elif user_input == '5':
                return self.get_real_time_rates("home_loan")
        
        # Handle sub-options
        if user_input in ['1.1', '1.2', '1.3', '1.4', '1.5', '2.1', '2.2', '2.3', '2.4', '2.5', '2.6', '2.7', '3.1', '3.2', '3.3', '3.4', '3.5', '3.6']:
            if user_input.startswith('1.'):
                return self.get_account_info(user_input)
            elif user_input.startswith('2.'):
                return self.get_loan_info(user_input)
            elif user_input.startswith('3.'):
                return self.get_card_info(user_input)
        
        # Handle AI Q&A
        if user_input.startswith('4'):
            return self.get_ai_response(user_input)
            
        return "I'm not sure I understand. Please select a valid option from the menu or type 'exit' to quit."

    def get_account_info(self, account_type):
        """Get detailed information about a specific account type"""
        account_data = self.banking_data["accounts"].get(account_type)
        if not account_data:
            return "Sorry, information for this account type is not available."
            
        response = f"""
🔹 {account_data['name']}

📝 Definition:
{account_data['definition']}

✅ Eligibility:
{account_data['eligibility']}

📋 Required Documents:
{chr(10).join(['• ' + doc for doc in account_data['documents']])}

💎 Benefits:
{chr(10).join(['• ' + benefit for benefit in account_data['benefits']])}

📌 Rules:
{chr(10).join(['• ' + rule for rule in account_data['rules']])}

🏦 Best Banks:
"""
        for bank in account_data['best_banks']:
            response += f"\n• {bank['name']}"
            for key, value in bank.items():
                if key != 'name' and key != 'application_link':
                    response += f"\n  - {key.replace('_', ' ').title()}: {value}"
            response += f"\n  - Apply: {bank['application_link']}\n"
            
        return response

    def get_loan_info(self, loan_type):
        """Get detailed information about a specific loan type"""
        loan_data = self.banking_data["loans"].get(loan_type)
        if not loan_data:
            return "Sorry, information for this loan type is not available."
            
        response = f"""
🔹 {loan_data['name']}

📝 Definition:
{loan_data['definition']}

✅ Eligibility:
{loan_data['eligibility']}

📋 Required Documents:
{chr(10).join(['• ' + doc for doc in loan_data['documents']])}

💎 Benefits:
{chr(10).join(['• ' + benefit for benefit in loan_data['benefits']])}

📌 Rules:
{chr(10).join(['• ' + rule for rule in loan_data['rules']])}

🏦 Best Banks:
"""
        for bank in loan_data['best_banks']:
            response += f"\n• {bank['name']}"
            for key, value in bank.items():
                if key != 'name' and key != 'application_link':
                    response += f"\n  - {key.replace('_', ' ').title()}: {value}"
            response += f"\n  - Apply: {bank['application_link']}\n"
            
        return response

    def get_card_info(self, card_type):
        """Get detailed information about a specific card type"""
        card_data = self.banking_data["cards"].get(card_type)
        if not card_data:
            return "Sorry, information for this card type is not available."
            
        response = f"""
🔹 {card_data['name']}

📝 Definition:
{card_data['definition']}

✅ Eligibility:
{card_data['eligibility']}

📋 Required Documents:
{chr(10).join(['• ' + doc for doc in card_data['documents']])}

💎 Benefits:
{chr(10).join(['• ' + benefit for benefit in card_data['benefits']])}

📌 Rules:
{chr(10).join(['• ' + rule for rule in card_data['rules']])}

🏦 Best Banks:
"""
        for bank in card_data['best_banks']:
            response += f"\n• {bank['name']}"
            for key, value in bank.items():
                if key != 'name' and key != 'application_link':
                    response += f"\n  - {key.replace('_', ' ').title()}: {value}"
            response += f"\n  - Apply: {bank['application_link']}\n"
            
        return response